@model  Bringly.Domain.User.UserRegistration
@{
    ViewBag.Title = "User Registration";
    Layout = "~/Views/Shared/MasterPages/AnonymousUser.cshtml";
}

<div class="bg-white section-shadow sign-margin">
    <div class="row">
        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-form-label">
            <h3 class="heading-sign">Sign Up</h3>
            <form class="form-sign-in formusrregistration" method="post">
                @Html.HiddenFor(m => m.BillingAddress.Latitude)
                @Html.HiddenFor(m => m.BillingAddress.Longitude)
                @Html.HiddenFor(m => m.BillingAddress.PlaceId)
                <div class="radio-option">
                    <label class="custom-control custom-radio">
                        @Html.RadioButtonFor(m => m.UserRegistrationType, "2", new { @checked = "checked", @class = "custom-control-input", @onchange = "CheckIsMerchant(this);" })
                        <span class="custom-control-indicator"></span>
                        <span class="custom-control-description"> I am a Buyer</span>
                    </label>
                    <label class="custom-control custom-radio">
                        @Html.RadioButtonFor(m => m.UserRegistrationType, "3", new { @class = "custom-control-input", @onchange = "CheckIsMerchant(this);" })
                        <span class="custom-control-indicator"></span>
                        <span class="custom-control-description">I am a Merchant</span>
                    </label>
                    @Html.HiddenFor(m => m.UserRegistrationType)
                </div>
                <div class="radio-option display-none" id="divMerchantMandatory">
                    <label class="custom-control custom-radio">
                        @Html.RadioButtonFor(m => m.CompanyorIndividual, "Company", new { @class = "custom-control-input checkboxcompany" })
                        <span class="custom-control-indicator"></span>
                        <span class="custom-control-description">Company</span>
                    </label>
                    <label class="custom-control custom-radio">
                        @Html.RadioButtonFor(m => m.CompanyorIndividual, "Individual", new { @class = "custom-control-input" })
                        <span class="custom-control-indicator"></span>
                        <span class="custom-control-description">Individual</span>
                    </label>
                    <label>
                        (Mandatory if user is of type "Merchant".)
                    </label>
                </div>
                <div class="form-group">
                    <div class="col-form-label">
                        <div class="map-form form-icon">
                            @Html.TextBoxFor(m => m.FullName, new { @class = "form-control", @placeholder = "Your Name" })
                            @Html.ValidationMessageFor(m => m.FullName)
                            <label class="icon-map"><i class="fa fa-user" aria-hidden="true"></i></label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-form-label">
                        <div class="map-form form-icon">
                            @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", @placeholder = "Your Email", @type = "email", @onchange = "checkUserEmailAlreadyExitsOrNot()" })
                            @Html.ValidationMessageFor(m => m.EmailAddress)
                            <label class="icon-map"><i class="fa fa-envelope" aria-hidden="true"></i></label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-form-label">
                        <div class="map-form form-icon">
                            @Html.TextBoxFor(m => m.MobileNumber, new { @class = "form-control", @placeholder = "Mobile Phone Number" })
                            @Html.ValidationMessageFor(m => m.MobileNumber)
                            <label class="icon-map"><i class="fa fa-phone" aria-hidden="true"></i></label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-form-label">
                        <div class="map-form form-icon map-btn">
                            <a href="javascript:void(0)" class="btn btn-primary" onclick="googleMapPopup()">Address From Google Map</a>
                        </div>
                    </div>
                </div>
                <div class="form-group display-none" id="divMerchantBusinessType">
                    <div class="col-form-label">
                        <div class="map-form form-icon">
                            @Html.DropDownListFor(m => m.BusinessTypeGuid, Model.BusinessTypeList.Select(x => new SelectListItem { Text = x.BusinessTypeName, Value = x.BusinessTypeGuid.ToString() }), "--Choose a Business Type--", new { @class = "chosen-select businesstype", @placeholder = "Choose a Business Type.." })
                            @Html.ValidationMessageFor(m => m.BusinessTypeGuid)
                            <label class="icon-map"><i class="fa fa-map-marker" aria-hidden="true"></i></label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="map-form form-icon">
                        @Html.TextAreaFor(m => m.BillingAddress.Address, new { @class = "form-control", @placeholder = "Address", @rows = "10", @cols = "12" })
                        @Html.ValidationMessageFor(m => m.BillingAddress.Address)
                        <label class="icon-map"><i class="fa fa-map-marker" aria-hidden="true"></i></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-form-label" id="divDdlCity">
                        <div class="map-form form-icon">
                            @Html.DropDownListFor(m => m.BillingAddress.CityGuid, Model.Cities.Select(x => new SelectListItem { Text = x.CityName, Value = x.CityGuid.ToString() }), "--Choose a City--", new { @class = "chosen-select selectedcity", @placeholder = "Choose a city..", @onchange = "onRegistrationCityChanges(this)" })
                            @Html.ValidationMessageFor(m => m.BillingAddress.CityGuid)
                            <label class="icon-map"><i class="fa fa-map-marker" aria-hidden="true"></i></label>
                        </div>
                    </div>
                    <div class="col-form-label">
                        <div class="display-none" id="txtEnterCityBox" style="margin-top: 1rem;">
                            <div class="map-form form-icon">
                                @Html.HiddenFor(m => m.BillingAddress.CityGuid, Guid.Empty.ToString())
                                @Html.TextBoxFor(m => m.BillingAddress.CityName, new { @class = "form-control", @placeholder = "Enter a city" })
                                @Html.ValidationMessageFor(m => m.BillingAddress.CityName)
                                <label class="icon-map"><i class="fa fa-map-marker" aria-hidden="true"></i></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-form-label">
                        <div class="map-form form-icon">
                            @Html.DropDownListFor(m => m.BillingAddress.Country, Model.Countries.Select(x => new SelectListItem { Text = x.CountryName, Value = x.CountryName }), "--Choose a Country--", new { @class = "chosen-select selectedcountry", @placeholder = "Choose a Country.." })
                            @Html.ValidationMessageFor(m => m.BillingAddress.Country)
                            <label class="icon-map"><i class="fa fa-map-marker" aria-hidden="true"></i></label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-form-label">
                        <div class="map-form form-icon">
                            @Html.TextBoxFor(m => m.BillingAddress.PostCode, new { @class = "form-control", @placeholder = "Post Code" })
                            @Html.ValidationMessageFor(m => m.BillingAddress.PostCode)
                            <label class="icon-map"><i class="fa fa-map-marker" aria-hidden="true"></i></label>
                        </div>
                    </div>
                </div>
                <div class="form-check">
                    <label class="form-check-label">
                        <input class="form-check-input useragreement" type="checkbox"> Accept <a href="javascript:void(0);" onclick="getUserAgreementPopup(event)">User Agreement</a>
                    </label>
                </div>
                <div class="form-group">
                    <button onclick="return Checkagreement();" id="btnRegister" type="submit" class="btn btn-primary btn-lg">SIGN UP</button>
                    <p class="button-link">Already have an account? <a href="/Home/login">Sign in</a></p>
                </div>
            </form>
        </div>
        <div class="col-xl-6 col-lg-6 col-md-6 col-sm-12 col-form-label">
            <div class="right-content-form">
                @{ Html.RenderPartial("~/Views/Home/_socialMediaLogin.cshtml", "sign up");}
            </div>
        </div>
    </div>
</div>

<script>
    function googleMapPopup() {
        $('#googleMapPopup').modelPopUp({
            windowId: "googleMapWindowId",
            width: 900,
            height: 510,
            url: "/Home/GetGoogleMap",
            closeOnOutSideClick: false,
        });
    }
</script>
