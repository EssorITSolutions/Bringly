@model Bringly.Domain.ComposeEmail
@{
    Layout = "~/Views/Shared/MasterPages/PartialMaster.cshtml";
}
@if (ViewBag.IspopUp != null)
{
    <script>
        window.parent.closeModelPopUpFormCompose('@ViewBag.Ismessagesent');
    </script>
}
else
{
    //using (@Html.BeginForm("ComposeEmail", "Email", FormMethod.Post))
    <form method="post" action="/Email/ComposeEmail" style="width:100%;" ValidateRequest="false" class="compose-form">
        @Html.HiddenFor(m=>m.Isemailreplyorforward)
        <div class="popup-heading">
            <h1>Send Email</h1>
            <div class="close-button">
                <button onclick="window.parent.closeModelPopUpForm(false)" class="btn-close">&times;</button>
            </div>
        </div>
        <div class="mail-box">
            <div class="form-group">
                @Html.DropDownListFor(m=>m.EmailToGuid, Model.UserContactList.Select(x=>new SelectListItem { Text=x.FullName, Value= x.UserGuid.ToString()}),new { @class="chosen -select",@placeholder="Choose a user.."})                
            </div>
            <div class="form-group">
                @Html.TextBoxFor(m => m.EmailMessage.Subject, new { @class = "form-control", @placeholder = "Subject" ,@maxlength="200" })
                @Html.ValidationMessageFor(m => m.EmailMessage.Subject)
            </div>
            <div class="form-group">
                @Html.TextAreaFor(m => m.EmailMessage.Body, new { @class = "form-control", @placeholder = "Message", @maxlength = "1000" })
                @Html.ValidationMessageFor(m => m.EmailMessage.Body)
            </div>
            <div class="form-group form-button">
                <input type="submit"  class="btn btn-primary" value="Send" />
                <input type="button" onclick="window.parent.closeModelPopUpForm(false)" class="btn btn-primary" value="Cancel" />
            </div>
        </div>
 
    </form>

}
